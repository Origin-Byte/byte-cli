{
    // Package of the collection contract.
    "packageName": "gnomes_inc",
    // Collection details.
    // Required
    "collection": {
        // Name of the collection. Will be used as module name in the generated contract (after sanitization).
        // Required
        "name": "gnomes",
        // Description of the collection.
        "description": "Test contract generated by Gutenberg",
        // Symbol of the collection.
        "symbol": "GNOMES",
        // The URL where more information about the collection can be found.
        "url": "https://originbyte.io/",
        // Array of creators' addresses. This is used solely for display purposes. Royalties are defined under settings object.
        // Required. Can be empty.
        "creators": [
            "0x0b86be5d779fac217b41d484b8040ad5145dc9ba0cba099d083c6cbda50d983e"
        ],
        // Supply of collection. Contract may enforce NFT supply on the collection level, however it may also only track the supply.
        // Required.
        // Possible values: `["untracked", "tracked", { "enforced": 600 }]`
        "supply": {
            "enforced": 600
        },
        // Tags for the NFTs. Custom tags are supported as well
        "tags": [
            "Art",
            "ProfilePicture",
            "Collectible",
            "GameAsset",
            "TokenisedAsset",
            "DomainName",
            "Music",
            "Video",
            "Ticket",
            "License",
            "Utility"
        ],
        // Royalties that will be charged when trading NFT collection
        "royalties": {
            "proportional": {
                "shares": [
                    {
                        "address": "0x8212bb78cc5c42f95766107573147d79b0954fe06e52f54f27e26677b43c88f5",
                        "shareBps": 9500
                    },
                    {
                        "address": "0x61028a4c388514000a7de787c3f7b8ec1eb88d1bd2dbc0d3dfab37078e39630f",
                        "shareBps": 500
                    }
                ],
                "collectionRoyaltyBps": 700
            }
        }
    },
    // NFT details.
    // Required
    "nft": {
        // The type name of the NFT.
        // Required
        "typeName": "Gnome",
        // If default, generates burn_nft, burn_nft_in_listing, burn_nft_in_listing_with_id functions.
        // Permissionless generates burn_own_nft and burn_own_nft_in_kiosk functions.
        // Possible values: [disabled, permissioned, permissionless]
        // Required
        "burn": "permissioned",
        // If set, generates dynamic metadata methods
        "dynamic": false,
        // MintCap that will be issued during collection initialization
        // Required.
        "mintCap": 600,
        // Policies for minting NFTs.
        // Required
        "mintPolicies": {
            // Specifies whether the launchpad minting policy is enabled. Generates mint_nft function.
            // Required
            "launchpad": true,
            // Specifies whether the airdrop minting policy is enabled. Generates airdrop_nft function.
            // Required
            "airdrop": true
        },
        // Policies for requests.
        "requestPolicies": {
            // Specifies whether transfer request policy is created.
            "transfer": true,
            // Specifies whether withdraw request policy is created.
            "withdraw": false,
            // Specifies whether borrowing request policy is created.
            "borrow": true
        },
        // The type of orderbook to use. "Protected" means enable_orderbook and disable_orderbook functions will be generated.
        // "Unprotected" generates the orderbook on publishing
        // Required
        // Possible values: `["none", "unprotected", "protected"]`
        "orderbook": "protected"
    }
}